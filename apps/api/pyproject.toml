[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agent-router-api"
version = "0.1.0"
description = "High-performance FastAPI backend for Agent Router"
authors = [
    {name = "Agent Router Team", email = "team@agentrouter.com"},
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi~=0.104.1",
    "uvicorn[standard]~=0.30.0",
    "sqlalchemy~=2.0.23",
    "alembic~=1.13.1",
    "aiosqlite~=0.19.0",
    "redis~=4.6.0",
    "fastapi-limiter~=0.1.4",
    "pydantic~=2.5.0",
    "pydantic-settings~=2.1.0",
    "email-validator~=2.1.0",
    "psutil~=5.9.0",
    "python-jose[cryptography]~=3.3.0",
    "passlib[bcrypt]~=1.7.4",
    "python-multipart~=0.0.6",
    "orjson~=3.9.10",
    "prometheus-fastapi-instrumentator~=6.1.0",
    "opentelemetry-api~=1.21.0",
    "opentelemetry-sdk~=1.21.0",
    "opentelemetry-instrumentation-fastapi~=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy~=0.42b0",
    "structlog~=23.2.0",
    "httpx~=0.25.2",
    "boto3~=1.34.0",
    "google-cloud-storage~=2.10.0",
    "azure-identity~=1.15.0",
    "azure-storage-blob~=12.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest~=7.4.3",
    "pytest-asyncio~=0.21.1",
    "pytest-cov~=4.1.0",
    "black~=23.11.0",
    "isort~=5.12.0",
    "ruff~=0.1.6",
    "mypy~=1.7.1",
    "pre-commit~=3.6.0",
    "httpx~=0.25.2",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "prometheus_fastapi_instrumentator.*",
    "opentelemetry.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
target-version = ['py311']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
